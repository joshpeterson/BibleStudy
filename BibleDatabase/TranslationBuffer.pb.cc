// Generated by the protocol buffer compiler.  DO NOT EDIT!

#include "TranslationBuffer.pb.h"
#include <google/protobuf/descriptor.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format_inl.h>

namespace BibleDatabase {

namespace {

const ::google::protobuf::Descriptor* VerseBuffer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  VerseBuffer_reflection_ = NULL;
const ::google::protobuf::Descriptor* TranslationBuffer_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  TranslationBuffer_reflection_ = NULL;

}  // namespace


void protobuf_BuildDesc_TranslationBuffer_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;
  ::google::protobuf::DescriptorPool* pool =
    ::google::protobuf::DescriptorPool::internal_generated_pool();

  const ::google::protobuf::FileDescriptor* file = pool->InternalBuildGeneratedFile(
    "\n\027TranslationBuffer.proto\022\rBibleDatabase"
    "\"\\\n\013VerseBuffer\022\014\n\004book\030\001 \002(\t\022\017\n\007chapter"
    "\030\002 \002(\005\022\r\n\005verse\030\003 \002(\005\022\014\n\004text\030\004 \002(\t\022\021\n\tu"
    "nique_id\030\005 \002(\005\"e\n\021TranslationBuffer\022\021\n\tl"
    "ong_name\030\001 \002(\t\022\022\n\nshort_name\030\002 \002(\t\022)\n\005ve"
    "rse\030\003 \003(\0132\032.BibleDatabase.VerseBuffer", 237);
  VerseBuffer_descriptor_ = file->message_type(0);
  VerseBuffer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      VerseBuffer_descriptor_,
      &VerseBuffer::default_instance(),
      VerseBuffer::_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerseBuffer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerseBuffer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    VerseBuffer_descriptor_, &VerseBuffer::default_instance());
  TranslationBuffer_descriptor_ = file->message_type(1);
  TranslationBuffer_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      TranslationBuffer_descriptor_,
      &TranslationBuffer::default_instance(),
      TranslationBuffer::_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationBuffer, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationBuffer, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    TranslationBuffer_descriptor_, &TranslationBuffer::default_instance());
}

// Force BuildDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_TranslationBuffer_2eproto {
  StaticDescriptorInitializer_TranslationBuffer_2eproto() {
    protobuf_BuildDesc_TranslationBuffer_2eproto();
  }
} static_descriptor_initializer_TranslationBuffer_2eproto_;


// ===================================================================

const VerseBuffer VerseBuffer::default_instance_;

const ::std::string VerseBuffer::_default_book_;


const ::std::string VerseBuffer::_default_text_;

const int VerseBuffer::_offsets_[5] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerseBuffer, book_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerseBuffer, chapter_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerseBuffer, verse_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerseBuffer, text_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(VerseBuffer, unique_id_),
};

VerseBuffer::VerseBuffer()
  : _cached_size_(0),
    book_(const_cast< ::std::string*>(&_default_book_)),
    chapter_(0),
    verse_(0),
    text_(const_cast< ::std::string*>(&_default_text_)),
    unique_id_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (this == &default_instance_) {
  }
}

VerseBuffer::VerseBuffer(const VerseBuffer& from)
  : _cached_size_(0),
    book_(const_cast< ::std::string*>(&_default_book_)),
    chapter_(0),
    verse_(0),
    text_(const_cast< ::std::string*>(&_default_text_)),
    unique_id_(0) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

VerseBuffer::~VerseBuffer() {
  if (book_ != &_default_book_) {
    delete book_;
  }
  if (text_ != &_default_text_) {
    delete text_;
  }
  if (this != &default_instance_) {
  }
}

const ::google::protobuf::Descriptor* VerseBuffer::descriptor() {
  if (VerseBuffer_descriptor_ == NULL) protobuf_BuildDesc_TranslationBuffer_2eproto();
  return VerseBuffer_descriptor_;
}

VerseBuffer* VerseBuffer::New() const {
  return new VerseBuffer;
}

const ::google::protobuf::Descriptor* VerseBuffer::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* VerseBuffer::GetReflection() const {
  if (VerseBuffer_reflection_ == NULL) protobuf_BuildDesc_TranslationBuffer_2eproto();
  return VerseBuffer_reflection_;
}

// ===================================================================

const TranslationBuffer TranslationBuffer::default_instance_;

const ::std::string TranslationBuffer::_default_long_name_;
const ::std::string TranslationBuffer::_default_short_name_;

const int TranslationBuffer::_offsets_[3] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationBuffer, long_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationBuffer, short_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TranslationBuffer, verse_),
};

TranslationBuffer::TranslationBuffer()
  : _cached_size_(0),
    long_name_(const_cast< ::std::string*>(&_default_long_name_)),
    short_name_(const_cast< ::std::string*>(&_default_short_name_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (this == &default_instance_) {
  }
}

TranslationBuffer::TranslationBuffer(const TranslationBuffer& from)
  : _cached_size_(0),
    long_name_(const_cast< ::std::string*>(&_default_long_name_)),
    short_name_(const_cast< ::std::string*>(&_default_short_name_)) {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  MergeFrom(from);
}

TranslationBuffer::~TranslationBuffer() {
  if (long_name_ != &_default_long_name_) {
    delete long_name_;
  }
  if (short_name_ != &_default_short_name_) {
    delete short_name_;
  }
  if (this != &default_instance_) {
  }
}

const ::google::protobuf::Descriptor* TranslationBuffer::descriptor() {
  if (TranslationBuffer_descriptor_ == NULL) protobuf_BuildDesc_TranslationBuffer_2eproto();
  return TranslationBuffer_descriptor_;
}

TranslationBuffer* TranslationBuffer::New() const {
  return new TranslationBuffer;
}

const ::google::protobuf::Descriptor* TranslationBuffer::GetDescriptor() const {
  return descriptor();
}

const ::google::protobuf::Reflection* TranslationBuffer::GetReflection() const {
  if (TranslationBuffer_reflection_ == NULL) protobuf_BuildDesc_TranslationBuffer_2eproto();
  return TranslationBuffer_reflection_;
}

}  // namespace BibleDatabase
